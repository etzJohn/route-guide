service RouteGuide {
    // A simple RPC where the client sends a request to the server using the stub
    // and waits for a response to come back, just like a normal function call.
    rpc GetFeature(Point) returns (Feature) {}
    // A server-side streaming RPC where the client sends a request to the server and
    // gets a stream to read a sequence of messages back. The client reads from the
    // returned stream until there are no more messages.
    rpc ListFeatures(Rectangle) returns (stream Feature) {}
    // A client-side streaming RPC where the client writes a sequence of messages and
    // sends them to the server, again using a provided stream. Once the client has
    // finished writing the messages, it waits for the server to read them all and
    // return its response. You specify a client-side streaming method by placing the
    // stream keyword before the request type.
    rpc RecordRoute(stream Point) returns (RouteSummary) {}
    // A bidirectional streaming RPC where both sides send a sequence of messages
    // using a read-write stream. The two streams operate independently, so clients
    // and servers can read and write in whatever order they like: for example,
    // the server could wait to receive all the client messages before writing its
    // responses, or it could alternately read a message then write a message, or
    // some other combination of reads and writes. The order of messages in each
    // stream is preserved. You specify this type of method by placing the stream
    // keyword before both the request and the response.
    rpt RouteChat(stream RouteNote) returns (stream RouteNote) {}
}

message Point {
    int32 latitude = 1;
    int32 longitude = 2;
}

message Rectangle {
    Point lo = 1;
    Point hi = 2;
}

message Feature {
    string name = 1;
    Point location = 2;
}

message RouteNote {
    Point location = 1;
    string message = 2;
}

message RouteSummary {
    int32 point_count = 1;
    int32 feature_count = 2;
    int32 distance = 3;
    int32 elapsed_time = 4;
}
